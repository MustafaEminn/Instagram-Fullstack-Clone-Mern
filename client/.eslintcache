[{"E:\\instagram\\client\\src\\index.tsx":"1","E:\\instagram\\client\\src\\App.tsx":"2","E:\\instagram\\client\\src\\views\\Login\\index.tsx":"3","E:\\instagram\\client\\src\\components\\Logo\\index.tsx":"4","E:\\instagram\\client\\src\\RouterApp.tsx":"5","E:\\instagram\\client\\src\\views\\Hey\\index.tsx":"6","E:\\instagram\\client\\src\\views\\SignUp\\index.tsx":"7","E:\\instagram\\client\\src\\utils\\helpers.ts":"8","E:\\instagram\\client\\src\\utils\\API.ts":"9","E:\\instagram\\client\\src\\utils\\API_SETTINGS.ts":"10","E:\\instagram\\client\\src\\views\\Home\\index.tsx":"11","E:\\instagram\\client\\src\\layout\\index.tsx":"12","E:\\instagram\\client\\src\\assets\\images\\global\\icons\\Home.tsx":"13","E:\\instagram\\client\\src\\assets\\images\\global\\icons\\Explore.tsx":"14","E:\\instagram\\client\\src\\assets\\images\\global\\icons\\Send.tsx":"15","E:\\instagram\\client\\src\\assets\\images\\global\\icons\\Hearth.tsx":"16","E:\\instagram\\client\\src\\components\\Avatar\\index.tsx":"17","E:\\instagram\\client\\src\\components\\CartHeader\\index.tsx":"18","E:\\instagram\\client\\src\\assets\\images\\global\\icons\\Comment.tsx":"19","E:\\instagram\\client\\src\\assets\\images\\global\\icons\\Bookmark.tsx":"20","E:\\instagram\\client\\src\\components\\CartPost\\index.tsx":"21"},{"size":220,"mtime":1610681023987,"results":"22","hashOfConfig":"23"},{"size":336,"mtime":1610776260712,"results":"24","hashOfConfig":"23"},{"size":6322,"mtime":1610877490427,"results":"25","hashOfConfig":"23"},{"size":491,"mtime":1610884391650,"results":"26","hashOfConfig":"23"},{"size":561,"mtime":1610875798678,"results":"27","hashOfConfig":"23"},{"size":342,"mtime":1610783849141,"results":"28","hashOfConfig":"23"},{"size":8154,"mtime":1610877504489,"results":"29","hashOfConfig":"23"},{"size":136,"mtime":1610792077172,"results":"30","hashOfConfig":"23"},{"size":576,"mtime":1611092519538,"results":"31","hashOfConfig":"23"},{"size":49,"mtime":1610855118776,"results":"32","hashOfConfig":"23"},{"size":3660,"mtime":1611092528245,"results":"33","hashOfConfig":"23"},{"size":2782,"mtime":1611035915738,"results":"34","hashOfConfig":"23"},{"size":558,"mtime":1610953646345,"results":"35","hashOfConfig":"23"},{"size":1109,"mtime":1610953630679,"results":"36","hashOfConfig":"23"},{"size":627,"mtime":1611035700622,"results":"37","hashOfConfig":"23"},{"size":785,"mtime":1611035675120,"results":"38","hashOfConfig":"23"},{"size":1455,"mtime":1610979849952,"results":"39","hashOfConfig":"23"},{"size":849,"mtime":1610979799822,"results":"40","hashOfConfig":"23"},{"size":1277,"mtime":1611035647687,"results":"41","hashOfConfig":"23"},{"size":519,"mtime":1611035853289,"results":"42","hashOfConfig":"23"},{"size":1508,"mtime":1611047375032,"results":"43","hashOfConfig":"23"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},"b98beh",{"filePath":"47","messages":"48","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"46"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"46"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"46"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"46"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"71","messages":"72","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"46"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"46"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"46"},"E:\\instagram\\client\\src\\index.tsx",[],["94","95"],"E:\\instagram\\client\\src\\App.tsx",["96","97"],"import React from \"react\";\nimport { Route, BrowserRouter, Switch } from \"react-router-dom\";\nimport \"./App.scss\";\nimport RouterApp from \"./RouterApp\";\nimport Login from \"./views/Login\";\n\nfunction App() {\n  return (\n    <BrowserRouter>\n      <Switch>\n        <RouterApp />\n      </Switch>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","E:\\instagram\\client\\src\\views\\Login\\index.tsx",["98"],"import React, { useEffect, useState } from \"react\";\r\nimport Logo from \"../../components/Logo\";\r\nimport styles from \"./Login.module.scss\";\r\nimport facebook from \"../../assets/images/components/Logo/icon/Facebook.webp\";\r\nimport googleplay from \"../../assets/images/global/googleplay.webp\";\r\nimport appstore from \"../../assets/images/global/appstore.webp\";\r\n\r\nimport ss1 from \"../../assets/images/global/telephoneScreenshots/1.webp\";\r\nimport ss2 from \"../../assets/images/global/telephoneScreenshots/2.webp\";\r\nimport ss3 from \"../../assets/images/global/telephoneScreenshots/3.webp\";\r\nimport ss4 from \"../../assets/images/global/telephoneScreenshots/4.webp\";\r\nimport ss5 from \"../../assets/images/global/telephoneScreenshots/5.webp\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport { postData } from \"../../utils/API\";\r\nimport { API_URL } from \"../../utils/API_SETTINGS\";\r\n\r\nconst Login = () => {\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [show, setShow] = useState(false);\r\n  const [error, setError] = useState(false);\r\n\r\n  const route = useHistory();\r\n\r\n  // SLIDER\r\n\r\n  var slideIndex = 2;\r\n\r\n  const Slider = setInterval(() => {\r\n    var ssid = document.getElementsByClassName(\r\n      `ss${slideIndex}`\r\n    ) as HTMLCollectionOf<HTMLImageElement>;\r\n    var ssidPrev = document.getElementsByClassName(\r\n      `ss${slideIndex - 1}`\r\n    ) as HTMLCollectionOf<HTMLImageElement>;\r\n    if (slideIndex === 1) {\r\n      ssidPrev = document.getElementsByClassName(\r\n        `ss5`\r\n      ) as HTMLCollectionOf<HTMLImageElement>;\r\n    }\r\n    if (window.location.pathname === \"/\") {\r\n      ssidPrev[0].style.opacity = \"0\";\r\n      ssid[0].style.opacity = \"1\";\r\n      slideIndex === 5 ? (slideIndex = 1) : (slideIndex += 1);\r\n    } else {\r\n      clearInterval(Slider);\r\n    }\r\n  }, 6000);\r\n\r\n  // AUTH\r\n\r\n  const buttonTrue = email.length > 0 && password.length > 5;\r\n\r\n  const LoginFetch = async () => {\r\n    if (buttonTrue) {\r\n      const post: any = postData(`${API_URL}/api/auth/login`, {\r\n        email: email,\r\n        password: password,\r\n      });\r\n      const res = await post;\r\n      if (res.data.success) {\r\n        localStorage.setItem(\"token\", res.data.token);\r\n        route.push(\"/home\");\r\n        setError(false);\r\n      } else {\r\n        setError(true);\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className={styles.container}>\r\n      <div className={styles.container1}>\r\n        <div\r\n          className={styles.ImgBox}\r\n          onDragStart={(e) => {\r\n            e.preventDefault();\r\n          }}\r\n        >\r\n          <img src={ss1} className=\"ss1\" loading=\"lazy\" alt=\"Screenshot\" />\r\n          <img src={ss2} className=\"ss2\" loading=\"lazy\" alt=\"Screenshot\" />\r\n          <img src={ss3} className=\"ss3\" loading=\"lazy\" alt=\"Screenshot\" />\r\n          <img src={ss4} className=\"ss4\" loading=\"lazy\" alt=\"Screenshot\" />\r\n          <img src={ss5} className=\"ss5\" loading=\"lazy\" alt=\"Screenshot\" />\r\n        </div>\r\n      </div>\r\n      <div className={styles.container2}>\r\n        <div className={styles.box1}>\r\n          <Logo height=\"51\" width=\"175\" />\r\n          <label id={styles.emailLabel} className={styles.Label}>\r\n            <input\r\n              onChange={(e) => {\r\n                setEmail(e.target.value);\r\n              }}\r\n              style={email.length > 0 ? { paddingTop: \"14px\" } : void 0}\r\n              value={email}\r\n              type=\"email\"\r\n              className={styles.Input}\r\n            />\r\n            <span\r\n              style={\r\n                email.length > 0 ? { top: \"4px\", fontSize: \"10px\" } : void 0\r\n              }\r\n            >\r\n              Email\r\n            </span>\r\n          </label>\r\n\r\n          <label id={styles.passLabel} className={styles.Label}>\r\n            <input\r\n              onChange={(e) => {\r\n                setPassword(e.target.value);\r\n              }}\r\n              style={password.length > 0 ? { paddingTop: \"14px\" } : void 0}\r\n              value={password}\r\n              type={show ? \"text\" : \"password\"}\r\n              className={styles.Input}\r\n            />\r\n            <span\r\n              style={\r\n                password.length > 0 ? { top: \"4px\", fontSize: \"10px\" } : void 0\r\n              }\r\n            >\r\n              Password\r\n            </span>\r\n            <button\r\n              onClick={() => {\r\n                setShow(!show);\r\n              }}\r\n              style={{ display: password.length > 0 ? \"inline-block\" : \"none\" }}\r\n              className={styles.inputButton}\r\n            >\r\n              {show ? \"Hide\" : \"Show\"}\r\n            </button>\r\n          </label>\r\n\r\n          <button\r\n            disabled={email.length > 0 && password.length >= 6 ? false : true}\r\n            className={styles.login}\r\n            onClick={LoginFetch}\r\n          >\r\n            Log In\r\n          </button>\r\n          {error && (\r\n            <h4 className={styles.error}>Ops! Something went wrong.</h4>\r\n          )}\r\n\r\n          <div className={styles.or}>\r\n            <h5>OR</h5>\r\n          </div>\r\n\r\n          <Link to=\"/hey\" className={styles.facebookLogin}>\r\n            <img src={facebook} alt=\"Facebook Logo\" loading=\"lazy\" />\r\n            Log in with Facebook\r\n          </Link>\r\n\r\n          <Link to=\"/hey\" className={styles.forgotPass}>\r\n            Forgot password?\r\n          </Link>\r\n        </div>\r\n        <div className={styles.box2}>\r\n          <p>\r\n            Don't have an account?&nbsp;\r\n            <Link className={styles.signup} to=\"/signup\">\r\n              Sign up\r\n            </Link>\r\n          </p>\r\n        </div>\r\n\r\n        <p className={styles.getApp}>Get the app.</p>\r\n        <div className={styles.box3}>\r\n          <a href=\"https://apps.apple.com/app/instagram/id389801252?vt=lo\">\r\n            <img\r\n              src={appstore}\r\n              className={styles.astore}\r\n              alt=\"App Store\"\r\n              loading=\"lazy\"\r\n            />\r\n          </a>\r\n\r\n          <a href=\"https://play.google.com/store/apps/details?id=com.instagram.android\">\r\n            <img\r\n              src={googleplay}\r\n              className={styles.gplay}\r\n              alt=\"Google Play\"\r\n              loading=\"lazy\"\r\n            />\r\n          </a>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n","E:\\instagram\\client\\src\\components\\Logo\\index.tsx",["99","100"],"import React from \"react\";\r\nimport styles from \"./Logo.module.scss\";\r\nimport logo from \"../../assets/images/components/Logo/logo.webp\";\r\n\r\ninterface logo {\r\n  width: string;\r\n  height: string;\r\n}\r\n\r\nconst Logo = ({ width, height }: logo) => {\r\n  return (\r\n    <img\r\n      onDragStart={(e) => {\r\n        e.preventDefault();\r\n      }}\r\n      width={width}\r\n      height={height}\r\n      src={logo}\r\n      loading=\"lazy\"\r\n      className={styles.logo}\r\n    />\r\n  );\r\n};\r\n\r\nexport default Logo;\r\n","E:\\instagram\\client\\src\\RouterApp.tsx",[],"E:\\instagram\\client\\src\\views\\Hey\\index.tsx",[],"E:\\instagram\\client\\src\\views\\SignUp\\index.tsx",["101","102","103","104"],"import React, { useState } from \"react\";\r\nimport Logo from \"../../components/Logo\";\r\nimport styles from \"./SignUp.module.scss\";\r\nimport googleplay from \"../../assets/images/global/googleplay.webp\";\r\nimport appstore from \"../../assets/images/global/appstore.webp\";\r\nimport facebookWhite from \"../../assets/images/views/SignUp/icons/facebookWhite.webp\";\r\nimport correct from \"../../assets/images/global/icons/correct.svg\";\r\nimport wrong from \"../../assets/images/global/icons/wrong.svg\";\r\n\r\nimport { postData } from \"../../utils/API\";\r\nimport { API_URL } from \"../../utils/API_SETTINGS\";\r\nimport { checkString } from \"../../utils/helpers\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\n\r\nconst SignUp = () => {\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [name, setName] = useState(\"\");\r\n  const [username, setUsername] = useState(\"\");\r\n  const [emailCheck, setEmailCheck] = useState(false);\r\n  const [emailCheckDB, setEmailCheckDB] = useState(false);\r\n  const [fullnameCheck, setFullnameCheck] = useState(false);\r\n  const [usernameCheck, setUsernameCheck] = useState(false);\r\n  const [usernameCheckDB, setUsernameCheckDB] = useState(false);\r\n  const [passwordCheck, setPasswordCheck] = useState(false);\r\n  const [error, setError] = useState(false);\r\n  const [show, setShow] = useState(false);\r\n\r\n  const route = useHistory();\r\n\r\n  const buttonTrue =\r\n    !emailCheck && usernameCheck && passwordCheck && fullnameCheck;\r\n\r\n  const SignUpFetch = async () => {\r\n    if (buttonTrue) {\r\n      const post: any = postData(`${API_URL}/api/auth/register`, {\r\n        username: username,\r\n        fullname: name,\r\n        email: email,\r\n        password: password,\r\n      });\r\n      const res = await post;\r\n      if (res.data.success) {\r\n        setError(false);\r\n        return route.push(\"/\");\r\n      } else {\r\n        return setError(true);\r\n      }\r\n    }\r\n  };\r\n\r\n  const DBEmailCheck = async (e: string) => {\r\n    const post: any = postData(`${API_URL}/api/auth/checkEmail`, {\r\n      email: e,\r\n    });\r\n    const res = await post;\r\n    !res.data.success ? setEmailCheckDB(false) : setEmailCheckDB(true);\r\n  };\r\n\r\n  const DBUsernameCheck = async (e: string) => {\r\n    const post: any = postData(`${API_URL}/api/auth/checkUsername`, {\r\n      username: e,\r\n    });\r\n    const res = await post;\r\n    res.data.success ? setUsernameCheckDB(false) : setUsernameCheckDB(true);\r\n  };\r\n\r\n  return (\r\n    <div className={styles.container}>\r\n      <div className={styles.container2}>\r\n        <div className={styles.box1}>\r\n          <Logo height=\"51\" width=\"175\" />\r\n          <p className={styles.headText}>\r\n            Sign up to see photos and videos from your friends.\r\n          </p>\r\n          <Link to=\"/hey\">\r\n            <button className={styles.loginFacebook}>\r\n              <img src={facebookWhite} alt=\"Facebook Icon\" />\r\n              Log in with Facebook\r\n            </button>\r\n          </Link>\r\n\r\n          <div className={styles.or}>\r\n            <h5>OR</h5>\r\n          </div>\r\n          <label id={styles.emailLabel} className={styles.Label}>\r\n            <input\r\n              onChange={(e) => {\r\n                setEmailCheck(\r\n                  !checkString(e.target.value, /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/)\r\n                );\r\n                DBEmailCheck(e.target.value);\r\n                setEmail(e.target.value);\r\n              }}\r\n              style={email.length > 0 ? { paddingTop: \"14px\" } : void 0}\r\n              value={email}\r\n              type=\"email\"\r\n              className={styles.Input}\r\n            />\r\n            <span\r\n              style={\r\n                email.length > 0 ? { top: \"4px\", fontSize: \"10px\" } : void 0\r\n              }\r\n            >\r\n              Email\r\n            </span>\r\n            {email.length > 0 && (\r\n              <img src={!emailCheck && !emailCheckDB ? correct : wrong} />\r\n            )}\r\n          </label>\r\n\r\n          <label id={styles.Name} className={styles.Label}>\r\n            <input\r\n              onChange={(e) => {\r\n                setFullnameCheck(e.target.value.length > 5);\r\n                setName(e.target.value);\r\n              }}\r\n              style={name.length > 0 ? { paddingTop: \"14px\" } : void 0}\r\n              value={name}\r\n              type=\"text\"\r\n              className={styles.Input}\r\n            />\r\n            <span\r\n              style={\r\n                name.length > 0 ? { top: \"4px\", fontSize: \"10px\" } : void 0\r\n              }\r\n            >\r\n              Full Name\r\n            </span>\r\n            {name.length > 0 && <img src={fullnameCheck ? correct : wrong} />}\r\n          </label>\r\n\r\n          <label id={styles.Username} className={styles.Label}>\r\n            <input\r\n              onChange={(e) => {\r\n                setUsernameCheck(e.target.value.length > 5);\r\n                setUsername(e.target.value);\r\n                DBUsernameCheck(e.target.value);\r\n              }}\r\n              style={username.length > 0 ? { paddingTop: \"14px\" } : void 0}\r\n              value={username}\r\n              type=\"text\"\r\n              className={styles.Input}\r\n            />\r\n            <span\r\n              style={\r\n                username.length > 0 ? { top: \"4px\", fontSize: \"10px\" } : void 0\r\n              }\r\n            >\r\n              Username\r\n            </span>\r\n            {username.length > 0 && (\r\n              <img src={usernameCheck && usernameCheckDB ? correct : wrong} />\r\n            )}\r\n          </label>\r\n\r\n          <label id={styles.passLabel} className={styles.Label}>\r\n            <input\r\n              onChange={(e) => {\r\n                setPasswordCheck(e.target.value.length > 5);\r\n                setPassword(e.target.value);\r\n              }}\r\n              style={password.length > 0 ? { paddingTop: \"14px\" } : void 0}\r\n              value={password}\r\n              type={show ? \"text\" : \"password\"}\r\n              className={styles.Input}\r\n            />\r\n            <span\r\n              style={\r\n                password.length > 0 ? { top: \"4px\", fontSize: \"10px\" } : void 0\r\n              }\r\n            >\r\n              Password\r\n            </span>\r\n            {password.length > 0 && (\r\n              <img src={passwordCheck ? correct : wrong} />\r\n            )}\r\n            <button\r\n              onClick={() => {\r\n                setShow(!show);\r\n              }}\r\n              style={{\r\n                display: password.length > 0 ? \"inline-block\" : \"none\",\r\n              }}\r\n              className={styles.inputButton}\r\n            >\r\n              {show ? \"Hide\" : \"Show\"}\r\n            </button>\r\n          </label>\r\n\r\n          <button\r\n            type=\"submit\"\r\n            disabled={buttonTrue ? false : true}\r\n            className={styles.login}\r\n            onClick={SignUpFetch}\r\n          >\r\n            Sign up\r\n          </button>\r\n\r\n          {error && (\r\n            <h4 className={styles.error}>Ops! Something went wrong.</h4>\r\n          )}\r\n\r\n          <h4 className={styles.policy}>\r\n            By signing up, you agree to our{\" \"}\r\n            <Link to=\"/hey\">Terms, Data Policy</Link> and{\" \"}\r\n            <Link to=\"/hey\">Cookies Policy.</Link>\r\n          </h4>\r\n        </div>\r\n        <div className={styles.box2}>\r\n          <p>\r\n            Have an account?&nbsp;\r\n            <Link className={styles.signup} to=\"/\">\r\n              Log in\r\n            </Link>\r\n          </p>\r\n        </div>\r\n\r\n        <p className={styles.getApp}>Get the app.</p>\r\n        <div className={styles.box3}>\r\n          <a href=\"https://apps.apple.com/app/instagram/id389801252?vt=lo\">\r\n            <img\r\n              src={appstore}\r\n              className={styles.astore}\r\n              alt=\"App Store\"\r\n              loading=\"lazy\"\r\n            />\r\n          </a>\r\n\r\n          <a href=\"https://play.google.com/store/apps/details?id=com.instagram.android\">\r\n            <img\r\n              src={googleplay}\r\n              className={styles.gplay}\r\n              alt=\"Google Play\"\r\n              loading=\"lazy\"\r\n            />\r\n          </a>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SignUp;\r\n","E:\\instagram\\client\\src\\utils\\helpers.ts",[],"E:\\instagram\\client\\src\\utils\\API.ts",[],"E:\\instagram\\client\\src\\utils\\API_SETTINGS.ts",[],"E:\\instagram\\client\\src\\views\\Home\\index.tsx",["105","106","107"],"E:\\instagram\\client\\src\\layout\\index.tsx",["108"],"import React, { ReactChild, useState } from \"react\";\r\nimport Logo from \"../components/Logo\";\r\nimport styles from \"./Layout.module.scss\";\r\n\r\nimport search from \"../assets/images/global/icons/search.svg\";\r\nimport cancel from \"../assets/images/global/icons/cancel.svg\";\r\nimport HomeIcon from \"../assets/images/global/icons/Home\";\r\nimport SendIcon from \"../assets/images/global/icons/Send\";\r\nimport ExploreIcon from \"../assets/images/global/icons/Explore\";\r\nimport HearthIcon from \"../assets/images/global/icons/Hearth\";\r\nimport Avatar from \"../components/Avatar\";\r\n\r\nconst Layout = ({ children }: any) => {\r\n  const path = window.location.pathname;\r\n\r\n  const [inputValue, setInputValue] = useState(\"\");\r\n  return (\r\n    <div className={styles.container}>\r\n      <div className={styles.containerHeader}>\r\n        <div className={styles.boxHeader}>\r\n          <div className={styles.box1}>\r\n            <Logo height=\"29\" width=\"103\" />\r\n          </div>\r\n          <div className={styles.box2}>\r\n            <label>\r\n              <input\r\n                value={inputValue}\r\n                onChange={(e) => setInputValue(e.target.value)}\r\n                placeholder=\"Search\"\r\n                type=\"text\"\r\n              />\r\n              <img\r\n                width=\"10\"\r\n                height=\"10\"\r\n                src={search}\r\n                alt=\"Search\"\r\n                loading=\"lazy\"\r\n                className={styles.searchIcon1}\r\n                style={{\r\n                  display: inputValue.length > 0 ? \"none\" : \"inline-block\",\r\n                }}\r\n              />\r\n              <img\r\n                width=\"15\"\r\n                height=\"15\"\r\n                src={cancel}\r\n                alt=\"Cancel\"\r\n                loading=\"lazy\"\r\n                className={styles.searchIcon2}\r\n                onClick={() => {\r\n                  setInputValue(\"\");\r\n                }}\r\n                style={{\r\n                  display: inputValue.length > 0 ? \"inline-block\" : \"none\",\r\n                }}\r\n              />\r\n            </label>\r\n          </div>\r\n\r\n          <div className={styles.box3}>\r\n            <HomeIcon color={path === \"/home\" ? \"black\" : void 0} />\r\n            <SendIcon\r\n              width={22}\r\n              height={22}\r\n              color={path === \"/message\" ? \"black\" : void 0}\r\n            />\r\n            <ExploreIcon color={path === \"/explore\" ? \"black\" : void 0} />\r\n            <HearthIcon\r\n              width={22}\r\n              height={22}\r\n              color={path === \"/notifications\" ? \"black\" : void 0}\r\n            />\r\n            <Avatar width={22} height={22} />\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className={styles.containerContent}>{children}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Layout;\r\n","E:\\instagram\\client\\src\\assets\\images\\global\\icons\\Home.tsx",[],"E:\\instagram\\client\\src\\assets\\images\\global\\icons\\Explore.tsx",[],"E:\\instagram\\client\\src\\assets\\images\\global\\icons\\Send.tsx",[],"E:\\instagram\\client\\src\\assets\\images\\global\\icons\\Hearth.tsx",[],"E:\\instagram\\client\\src\\components\\Avatar\\index.tsx",[],"E:\\instagram\\client\\src\\components\\CartHeader\\index.tsx",["109"],"import React, { useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Avatar from \"../Avatar\";\r\nimport styles from \"./CartHeader.module.scss\";\r\n\r\ninterface cartHeader {\r\n  pageName: string;\r\n  height: string;\r\n  width: string;\r\n}\r\n\r\nconst CartHeader = ({ pageName, height, width }: cartHeader) => {\r\n  return (\r\n    <div style={{ height: height, width: width }} className={styles.container}>\r\n      <div className={styles.pageName}>\r\n        <Avatar\r\n          width={32}\r\n          height={32}\r\n          border\r\n          borderWidth={46}\r\n          borderHeight={46}\r\n        />\r\n        <Link to={`profiles/${pageName}`}>{pageName}</Link>\r\n        &nbsp;&bull;&nbsp;\r\n        <Link to={`profiles/${pageName}`}>Follow</Link>\r\n      </div>\r\n      <p>&bull;&bull;&bull;</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CartHeader;\r\n","E:\\instagram\\client\\src\\assets\\images\\global\\icons\\Comment.tsx",[],"E:\\instagram\\client\\src\\assets\\images\\global\\icons\\Bookmark.tsx",[],"E:\\instagram\\client\\src\\components\\CartPost\\index.tsx",["110"],"import React, { useState } from \"react\";\r\nimport styles from \"./CartPost.module.scss\";\r\n\r\ninterface cartpost {\r\n  width: string;\r\n  height: string;\r\n}\r\n\r\nconst CartPost = ({ width, height }: cartpost) => {\r\n  const textareaChecker = () => {\r\n    const taElement = document.getElementsByClassName(\"cardPostTextarea\")[0];\r\n    const taElementId = document.getElementById(\r\n      \"cardPostTextarea\"\r\n    ) as HTMLTextAreaElement;\r\n    const cartPostElement = document.getElementById(\r\n      \"cartPostContainer\"\r\n    ) as HTMLDivElement;\r\n    if (\r\n      taElement.scrollHeight > 22 &&\r\n      taElementId.scrollHeight < 90 &&\r\n      taElementId.textLength > 79\r\n    ) {\r\n      taElementId.style.height = \"auto\";\r\n      taElementId.style.height = `${taElement.scrollHeight}px`;\r\n      cartPostElement.style.height = `${taElement.scrollHeight}px`;\r\n    } else if (taElementId.textLength < 79) {\r\n      cartPostElement.style.height = \"58px\";\r\n      taElementId.style.height = `18px`;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div\r\n      style={{ width: width, height: height, minHeight: height }}\r\n      id=\"cartPostContainer\"\r\n      className={styles.container}\r\n    >\r\n      <textarea\r\n        onKeyPress={() => {\r\n          textareaChecker();\r\n        }}\r\n        placeholder=\"Add a comment...\"\r\n        style={{\r\n          height: \"18px\",\r\n        }}\r\n        id=\"cardPostTextarea\"\r\n        className=\"cardPostTextarea\"\r\n      ></textarea>\r\n      <button>Post</button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CartPost;\r\n",{"ruleId":"111","replacedBy":"112"},{"ruleId":"113","replacedBy":"114"},{"ruleId":"115","severity":1,"message":"116","line":2,"column":10,"nodeType":"117","messageId":"118","endLine":2,"endColumn":15},{"ruleId":"115","severity":1,"message":"119","line":5,"column":8,"nodeType":"117","messageId":"118","endLine":5,"endColumn":13},{"ruleId":"115","severity":1,"message":"120","line":1,"column":17,"nodeType":"117","messageId":"118","endLine":1,"endColumn":26},{"ruleId":"121","severity":1,"message":"122","line":5,"column":11,"nodeType":"117","messageId":"123","endLine":5,"endColumn":15},{"ruleId":"124","severity":1,"message":"125","line":12,"column":5,"nodeType":"126","endLine":21,"endColumn":7},{"ruleId":"124","severity":1,"message":"125","line":108,"column":15,"nodeType":"126","endLine":108,"endColumn":75},{"ruleId":"124","severity":1,"message":"125","line":130,"column":33,"nodeType":"126","endLine":130,"endColumn":78},{"ruleId":"124","severity":1,"message":"125","line":153,"column":15,"nodeType":"126","endLine":153,"endColumn":79},{"ruleId":"124","severity":1,"message":"125","line":176,"column":15,"nodeType":"126","endLine":176,"endColumn":60},{"ruleId":"115","severity":1,"message":"127","line":7,"column":8,"nodeType":"117","messageId":"118","endLine":7,"endColumn":15},{"ruleId":"115","severity":1,"message":"128","line":8,"column":8,"nodeType":"117","messageId":"118","endLine":8,"endColumn":15},{"ruleId":"129","severity":1,"message":"130","line":55,"column":13,"nodeType":"126","endLine":55,"endColumn":78},{"ruleId":"115","severity":1,"message":"131","line":1,"column":17,"nodeType":"117","messageId":"118","endLine":1,"endColumn":27},{"ruleId":"115","severity":1,"message":"132","line":1,"column":17,"nodeType":"117","messageId":"118","endLine":1,"endColumn":25},{"ruleId":"115","severity":1,"message":"132","line":1,"column":17,"nodeType":"117","messageId":"118","endLine":1,"endColumn":25},"no-native-reassign",["133"],"no-negated-in-lhs",["134"],"@typescript-eslint/no-unused-vars","'Route' is defined but never used.","Identifier","unusedVar","'Login' is defined but never used.","'useEffect' is defined but never used.","@typescript-eslint/no-redeclare","'logo' is already defined.","redeclared","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'simple2' is defined but never used.","'simple3' is defined but never used.","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","'ReactChild' is defined but never used.","'useState' is defined but never used.","no-global-assign","no-unsafe-negation"]