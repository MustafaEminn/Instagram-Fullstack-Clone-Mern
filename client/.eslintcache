[{"E:\\instagram\\client\\src\\index.tsx":"1","E:\\instagram\\client\\src\\App.tsx":"2","E:\\instagram\\client\\src\\views\\Login\\index.tsx":"3","E:\\instagram\\client\\src\\components\\Logo\\index.tsx":"4","E:\\instagram\\client\\src\\RouterApp.tsx":"5","E:\\instagram\\client\\src\\views\\Hey\\index.tsx":"6","E:\\instagram\\client\\src\\views\\SignUp\\index.tsx":"7","E:\\instagram\\client\\src\\utils\\helpers.ts":"8","E:\\instagram\\client\\src\\utils\\API.ts":"9","E:\\instagram\\client\\src\\utils\\API_SETTINGS.ts":"10","E:\\instagram\\client\\src\\views\\Home\\index.tsx":"11","E:\\instagram\\client\\src\\layout\\index.tsx":"12","E:\\instagram\\client\\src\\assets\\images\\global\\icons\\Home.tsx":"13","E:\\instagram\\client\\src\\assets\\images\\global\\icons\\Explore.tsx":"14","E:\\instagram\\client\\src\\assets\\images\\global\\icons\\Send.tsx":"15","E:\\instagram\\client\\src\\assets\\images\\global\\icons\\Hearth.tsx":"16","E:\\instagram\\client\\src\\components\\Avatar\\index.tsx":"17","E:\\instagram\\client\\src\\components\\CartHeader\\index.tsx":"18","E:\\instagram\\client\\src\\assets\\images\\global\\icons\\Comment.tsx":"19","E:\\instagram\\client\\src\\assets\\images\\global\\icons\\Bookmark.tsx":"20","E:\\instagram\\client\\src\\components\\CartPost\\index.tsx":"21","E:\\instagram\\client\\src\\components\\Modal\\index.tsx":"22","E:\\instagram\\client\\src\\store\\atom.ts":"23","E:\\instagram\\client\\src\\store\\HearthIcon\\hearthicon.atom.ts":"24","E:\\instagram\\client\\src\\components\\Spinner\\index.tsx":"25","E:\\instagram\\client\\src\\assets\\images\\global\\Spinner.tsx":"26","E:\\instagram\\client\\src\\components\\Post\\index.tsx":"27","E:\\instagram\\client\\src\\store\\Post\\Post.atom.ts":"28","E:\\instagram\\client\\src\\views\\Profiles\\index.tsx":"29","E:\\instagram\\client\\src\\components\\AuthRoute\\index.tsx":"30","E:\\instagram\\client\\src\\utils\\AuthMiddleware.tsx":"31","E:\\instagram\\client\\src\\views\\404\\index.tsx":"32","E:\\instagram\\client\\src\\assets\\images\\global\\icons\\CommentPost.tsx":"33","E:\\instagram\\client\\src\\views\\Posts\\index.tsx":"34"},{"size":220,"mtime":1610681023987,"results":"35","hashOfConfig":"36"},{"size":234,"mtime":1611748651793,"results":"37","hashOfConfig":"36"},{"size":6630,"mtime":1611773716008,"results":"38","hashOfConfig":"36"},{"size":491,"mtime":1610884391650,"results":"39","hashOfConfig":"36"},{"size":1075,"mtime":1612371032569,"results":"40","hashOfConfig":"36"},{"size":342,"mtime":1610783849141,"results":"41","hashOfConfig":"36"},{"size":8268,"mtime":1611773603563,"results":"42","hashOfConfig":"36"},{"size":136,"mtime":1610792077172,"results":"43","hashOfConfig":"36"},{"size":967,"mtime":1611140096145,"results":"44","hashOfConfig":"36"},{"size":49,"mtime":1610855118776,"results":"45","hashOfConfig":"36"},{"size":5117,"mtime":1612442678901,"results":"46","hashOfConfig":"36"},{"size":3372,"mtime":1612370344842,"results":"47","hashOfConfig":"36"},{"size":558,"mtime":1610953646345,"results":"48","hashOfConfig":"36"},{"size":1109,"mtime":1610953630679,"results":"49","hashOfConfig":"36"},{"size":627,"mtime":1611035700622,"results":"50","hashOfConfig":"36"},{"size":3400,"mtime":1611873323348,"results":"51","hashOfConfig":"36"},{"size":1580,"mtime":1611751408383,"results":"52","hashOfConfig":"36"},{"size":4157,"mtime":1612445693068,"results":"53","hashOfConfig":"36"},{"size":1351,"mtime":1611774404165,"results":"54","hashOfConfig":"36"},{"size":1537,"mtime":1611214408691,"results":"55","hashOfConfig":"36"},{"size":2786,"mtime":1612451569531,"results":"56","hashOfConfig":"36"},{"size":899,"mtime":1611152687695,"results":"57","hashOfConfig":"36"},{"size":82,"mtime":1611671210415,"results":"58","hashOfConfig":"36"},{"size":125,"mtime":1611507040100,"results":"59","hashOfConfig":"36"},{"size":541,"mtime":1611521080166,"results":"60","hashOfConfig":"36"},{"size":2068,"mtime":1611524366760,"results":"61","hashOfConfig":"36"},{"size":5061,"mtime":1612455162708,"results":"62","hashOfConfig":"36"},{"size":162,"mtime":1611671328071,"results":"63","hashOfConfig":"36"},{"size":9964,"mtime":1612398385673,"results":"64","hashOfConfig":"36"},{"size":876,"mtime":1611749009554,"results":"65","hashOfConfig":"36"},{"size":760,"mtime":1611751204980,"results":"66","hashOfConfig":"36"},{"size":353,"mtime":1611756425475,"results":"67","hashOfConfig":"36"},{"size":1285,"mtime":1611775146827,"results":"68","hashOfConfig":"36"},{"size":7089,"mtime":1612106017192,"results":"69","hashOfConfig":"36"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},"b98beh",{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"72"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"72"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"72"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"72"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"72"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"108","usedDeprecatedRules":"72"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113","usedDeprecatedRules":"72"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"118","usedDeprecatedRules":"72"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"121","messages":"122","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"123","usedDeprecatedRules":"72"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"138","usedDeprecatedRules":"72"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"141","usedDeprecatedRules":"142"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"145","usedDeprecatedRules":"72"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"152","usedDeprecatedRules":"72"},"E:\\instagram\\client\\src\\index.tsx",[],["153","154"],"E:\\instagram\\client\\src\\App.tsx",[],"E:\\instagram\\client\\src\\views\\Login\\index.tsx",["155"],"import React, { useEffect, useState } from \"react\";\r\nimport Logo from \"../../components/Logo\";\r\nimport styles from \"./Login.module.scss\";\r\nimport facebook from \"../../assets/images/components/Logo/icon/Facebook.webp\";\r\nimport googleplay from \"../../assets/images/global/googleplay.webp\";\r\nimport appstore from \"../../assets/images/global/appstore.webp\";\r\n\r\nimport ss1 from \"../../assets/images/global/telephoneScreenshots/1.webp\";\r\nimport ss2 from \"../../assets/images/global/telephoneScreenshots/2.webp\";\r\nimport ss3 from \"../../assets/images/global/telephoneScreenshots/3.webp\";\r\nimport ss4 from \"../../assets/images/global/telephoneScreenshots/4.webp\";\r\nimport ss5 from \"../../assets/images/global/telephoneScreenshots/5.webp\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport { getData, postData } from \"../../utils/API\";\r\nimport { API_URL } from \"../../utils/API_SETTINGS\";\r\nimport AuthMiddleware from \"../../utils/AuthMiddleware\";\r\n\r\nconst Login = () => {\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [show, setShow] = useState(false);\r\n  const [error, setError] = useState(false);\r\n\r\n  const route = useHistory();\r\n\r\n  // SLIDER\r\n\r\n  var slideIndex = 2;\r\n\r\n  const Slider = setInterval(() => {\r\n    var ssid = document.getElementsByClassName(\r\n      `ss${slideIndex}`\r\n    ) as HTMLCollectionOf<HTMLImageElement>;\r\n    var ssidPrev = document.getElementsByClassName(\r\n      `ss${slideIndex - 1}`\r\n    ) as HTMLCollectionOf<HTMLImageElement>;\r\n    if (slideIndex === 1) {\r\n      ssidPrev = document.getElementsByClassName(\r\n        `ss5`\r\n      ) as HTMLCollectionOf<HTMLImageElement>;\r\n    }\r\n    if (window.location.pathname === \"/\") {\r\n      ssidPrev[0].style.opacity = \"0\";\r\n      ssid[0].style.opacity = \"1\";\r\n      slideIndex === 5 ? (slideIndex = 1) : (slideIndex += 1);\r\n    } else {\r\n      clearInterval(Slider);\r\n    }\r\n  }, 6000);\r\n\r\n  // AUTH\r\n\r\n  const buttonTrue = email.length > 0 && password.length > 5;\r\n\r\n  const LoginFetch = async () => {\r\n    if (buttonTrue) {\r\n      const post: any = postData(`${API_URL}/api/auth/login`, {\r\n        email: email,\r\n        password: password,\r\n      });\r\n      const res = await post;\r\n      if (res.data.success) {\r\n        const username = await getData(\r\n          `${API_URL}/api/auth/getUsername/${email}`\r\n        );\r\n        localStorage.setItem(\"token\", res.data.token);\r\n        localStorage.setItem(\"username\", await username.data.data.username);\r\n        route.push(\"/home\");\r\n        setError(false);\r\n      } else {\r\n        setError(true);\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className={styles.container}>\r\n      <AuthMiddleware onAuth=\"/home\" noAuth={false} />\r\n      <div className={styles.container1}>\r\n        <div\r\n          className={styles.ImgBox}\r\n          onDragStart={(e) => {\r\n            e.preventDefault();\r\n          }}\r\n        >\r\n          <img src={ss1} className=\"ss1\" loading=\"lazy\" alt=\"Screenshot\" />\r\n          <img src={ss2} className=\"ss2\" loading=\"lazy\" alt=\"Screenshot\" />\r\n          <img src={ss3} className=\"ss3\" loading=\"lazy\" alt=\"Screenshot\" />\r\n          <img src={ss4} className=\"ss4\" loading=\"lazy\" alt=\"Screenshot\" />\r\n          <img src={ss5} className=\"ss5\" loading=\"lazy\" alt=\"Screenshot\" />\r\n        </div>\r\n      </div>\r\n      <div className={styles.container2}>\r\n        <div className={styles.box1}>\r\n          <Logo height=\"51\" width=\"175\" />\r\n          <label id={styles.emailLabel} className={styles.Label}>\r\n            <input\r\n              onChange={(e) => {\r\n                setEmail(e.target.value);\r\n              }}\r\n              style={email.length > 0 ? { paddingTop: \"14px\" } : void 0}\r\n              value={email}\r\n              type=\"email\"\r\n              className={styles.Input}\r\n            />\r\n            <span\r\n              style={\r\n                email.length > 0 ? { top: \"4px\", fontSize: \"10px\" } : void 0\r\n              }\r\n            >\r\n              Email\r\n            </span>\r\n          </label>\r\n\r\n          <label id={styles.passLabel} className={styles.Label}>\r\n            <input\r\n              onChange={(e) => {\r\n                setPassword(e.target.value);\r\n              }}\r\n              style={password.length > 0 ? { paddingTop: \"14px\" } : void 0}\r\n              value={password}\r\n              type={show ? \"text\" : \"password\"}\r\n              className={styles.Input}\r\n            />\r\n            <span\r\n              style={\r\n                password.length > 0 ? { top: \"4px\", fontSize: \"10px\" } : void 0\r\n              }\r\n            >\r\n              Password\r\n            </span>\r\n            <button\r\n              onClick={() => {\r\n                setShow(!show);\r\n              }}\r\n              style={{ display: password.length > 0 ? \"inline-block\" : \"none\" }}\r\n              className={styles.inputButton}\r\n            >\r\n              {show ? \"Hide\" : \"Show\"}\r\n            </button>\r\n          </label>\r\n\r\n          <button\r\n            disabled={email.length > 0 && password.length >= 6 ? false : true}\r\n            className={styles.login}\r\n            onClick={LoginFetch}\r\n          >\r\n            Log In\r\n          </button>\r\n          {error && (\r\n            <h4 className={styles.error}>Ops! Something went wrong.</h4>\r\n          )}\r\n\r\n          <div className={styles.or}>\r\n            <h5>OR</h5>\r\n          </div>\r\n\r\n          <Link to=\"/hey\" className={styles.facebookLogin}>\r\n            <img src={facebook} alt=\"Facebook Logo\" loading=\"lazy\" />\r\n            Log in with Facebook\r\n          </Link>\r\n\r\n          <Link to=\"/hey\" className={styles.forgotPass}>\r\n            Forgot password?\r\n          </Link>\r\n        </div>\r\n        <div className={styles.box2}>\r\n          <p>\r\n            Don't have an account?&nbsp;\r\n            <Link className={styles.signup} to=\"/signup\">\r\n              Sign up\r\n            </Link>\r\n          </p>\r\n        </div>\r\n\r\n        <p className={styles.getApp}>Get the app.</p>\r\n        <div className={styles.box3}>\r\n          <a href=\"https://apps.apple.com/app/instagram/id389801252?vt=lo\">\r\n            <img\r\n              src={appstore}\r\n              className={styles.astore}\r\n              alt=\"App Store\"\r\n              loading=\"lazy\"\r\n            />\r\n          </a>\r\n\r\n          <a href=\"https://play.google.com/store/apps/details?id=com.instagram.android\">\r\n            <img\r\n              src={googleplay}\r\n              className={styles.gplay}\r\n              alt=\"Google Play\"\r\n              loading=\"lazy\"\r\n            />\r\n          </a>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n","E:\\instagram\\client\\src\\components\\Logo\\index.tsx",["156","157"],"import React from \"react\";\r\nimport styles from \"./Logo.module.scss\";\r\nimport logo from \"../../assets/images/components/Logo/logo.webp\";\r\n\r\ninterface logo {\r\n  width: string;\r\n  height: string;\r\n}\r\n\r\nconst Logo = ({ width, height }: logo) => {\r\n  return (\r\n    <img\r\n      onDragStart={(e) => {\r\n        e.preventDefault();\r\n      }}\r\n      width={width}\r\n      height={height}\r\n      src={logo}\r\n      loading=\"lazy\"\r\n      className={styles.logo}\r\n    />\r\n  );\r\n};\r\n\r\nexport default Logo;\r\n","E:\\instagram\\client\\src\\RouterApp.tsx",["158"],"import React from \"react\";\r\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\";\r\nimport AuthRouteDefault from \"./components/AuthRoute\";\r\nimport Error404 from \"./views/404\";\r\nimport Hey from \"./views/Hey\";\r\nimport Home from \"./views/Home\";\r\nimport Login from \"./views/Login\";\r\nimport Posts from \"./views/Posts\";\r\nimport Profiles from \"./views/Profiles\";\r\nimport SignUp from \"./views/SignUp\";\r\n\r\nconst RouterApp = () => {\r\n  return (\r\n    <BrowserRouter>\r\n      <Switch>\r\n        <Route path=\"/\" exact>\r\n          <Login />\r\n        </Route>\r\n        <Route exact path=\"/hey\">\r\n          <Hey />\r\n        </Route>\r\n        <Route path=\"/signup\">\r\n          <SignUp />\r\n        </Route>\r\n        <Route path=\"/home\">\r\n          <Home />\r\n        </Route>\r\n        <Route path=\"/posts/:id\">\r\n          <Posts />\r\n        </Route>\r\n        <Route path=\"/404\">\r\n          <Error404 />\r\n        </Route>\r\n        <Route path=\"/profiles/:username\">\r\n          <Profiles />\r\n        </Route>\r\n      </Switch>\r\n    </BrowserRouter>\r\n  );\r\n};\r\n\r\nexport default RouterApp;\r\n","E:\\instagram\\client\\src\\views\\Hey\\index.tsx",[],"E:\\instagram\\client\\src\\views\\SignUp\\index.tsx",["159","160","161","162"],"import React, { useState } from \"react\";\r\nimport Logo from \"../../components/Logo\";\r\nimport styles from \"./SignUp.module.scss\";\r\nimport googleplay from \"../../assets/images/global/googleplay.webp\";\r\nimport appstore from \"../../assets/images/global/appstore.webp\";\r\nimport facebookWhite from \"../../assets/images/views/SignUp/icons/facebookWhite.webp\";\r\nimport correct from \"../../assets/images/global/icons/correct.svg\";\r\nimport wrong from \"../../assets/images/global/icons/wrong.svg\";\r\n\r\nimport { postData } from \"../../utils/API\";\r\nimport { API_URL } from \"../../utils/API_SETTINGS\";\r\nimport { checkString } from \"../../utils/helpers\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport AuthMiddleware from \"../../utils/AuthMiddleware\";\r\n\r\nconst SignUp = () => {\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [name, setName] = useState(\"\");\r\n  const [username, setUsername] = useState(\"\");\r\n  const [emailCheck, setEmailCheck] = useState(false);\r\n  const [emailCheckDB, setEmailCheckDB] = useState(false);\r\n  const [fullnameCheck, setFullnameCheck] = useState(false);\r\n  const [usernameCheck, setUsernameCheck] = useState(false);\r\n  const [usernameCheckDB, setUsernameCheckDB] = useState(false);\r\n  const [passwordCheck, setPasswordCheck] = useState(false);\r\n  const [error, setError] = useState(false);\r\n  const [show, setShow] = useState(false);\r\n\r\n  const route = useHistory();\r\n\r\n  const buttonTrue =\r\n    !emailCheck && usernameCheck && passwordCheck && fullnameCheck;\r\n\r\n  const SignUpFetch = async () => {\r\n    if (buttonTrue) {\r\n      const post: any = postData(`${API_URL}/api/auth/register`, {\r\n        username: username,\r\n        fullname: name,\r\n        email: email,\r\n        password: password,\r\n      });\r\n      const res = await post;\r\n      if (res.data.success) {\r\n        setError(false);\r\n        return route.push(\"/\");\r\n      } else {\r\n        return setError(true);\r\n      }\r\n    }\r\n  };\r\n\r\n  const DBEmailCheck = async (e: string) => {\r\n    const post: any = postData(`${API_URL}/api/auth/checkEmail`, {\r\n      email: e,\r\n    });\r\n    const res = await post;\r\n    !res.data.success ? setEmailCheckDB(false) : setEmailCheckDB(true);\r\n  };\r\n\r\n  const DBUsernameCheck = async (e: string) => {\r\n    const post: any = postData(`${API_URL}/api/auth/checkUsername`, {\r\n      username: e,\r\n    });\r\n    const res = await post;\r\n    res.data.success ? setUsernameCheckDB(false) : setUsernameCheckDB(true);\r\n  };\r\n\r\n  return (\r\n    <div className={styles.container}>\r\n      <AuthMiddleware onAuth=\"/home\" noAuth={false} />\r\n      <div className={styles.container2}>\r\n        <div className={styles.box1}>\r\n          <Logo height=\"51\" width=\"175\" />\r\n          <p className={styles.headText}>\r\n            Sign up to see photos and videos from your friends.\r\n          </p>\r\n          <Link to=\"/hey\">\r\n            <button className={styles.loginFacebook}>\r\n              <img src={facebookWhite} alt=\"Facebook Icon\" />\r\n              Log in with Facebook\r\n            </button>\r\n          </Link>\r\n\r\n          <div className={styles.or}>\r\n            <h5>OR</h5>\r\n          </div>\r\n          <label id={styles.emailLabel} className={styles.Label}>\r\n            <input\r\n              onChange={(e) => {\r\n                setEmailCheck(\r\n                  !checkString(e.target.value, /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/)\r\n                );\r\n                DBEmailCheck(e.target.value);\r\n                setEmail(e.target.value);\r\n              }}\r\n              style={email.length > 0 ? { paddingTop: \"14px\" } : void 0}\r\n              value={email}\r\n              type=\"email\"\r\n              className={styles.Input}\r\n            />\r\n            <span\r\n              style={\r\n                email.length > 0 ? { top: \"4px\", fontSize: \"10px\" } : void 0\r\n              }\r\n            >\r\n              Email\r\n            </span>\r\n            {email.length > 0 && (\r\n              <img src={!emailCheck && !emailCheckDB ? correct : wrong} />\r\n            )}\r\n          </label>\r\n\r\n          <label id={styles.Name} className={styles.Label}>\r\n            <input\r\n              onChange={(e) => {\r\n                setFullnameCheck(e.target.value.length > 5);\r\n                setName(e.target.value);\r\n              }}\r\n              style={name.length > 0 ? { paddingTop: \"14px\" } : void 0}\r\n              value={name}\r\n              type=\"text\"\r\n              className={styles.Input}\r\n            />\r\n            <span\r\n              style={\r\n                name.length > 0 ? { top: \"4px\", fontSize: \"10px\" } : void 0\r\n              }\r\n            >\r\n              Full Name\r\n            </span>\r\n            {name.length > 0 && <img src={fullnameCheck ? correct : wrong} />}\r\n          </label>\r\n\r\n          <label id={styles.Username} className={styles.Label}>\r\n            <input\r\n              onChange={(e) => {\r\n                setUsernameCheck(e.target.value.length > 5);\r\n                setUsername(e.target.value);\r\n                DBUsernameCheck(e.target.value);\r\n              }}\r\n              style={username.length > 0 ? { paddingTop: \"14px\" } : void 0}\r\n              value={username}\r\n              type=\"text\"\r\n              className={styles.Input}\r\n            />\r\n            <span\r\n              style={\r\n                username.length > 0 ? { top: \"4px\", fontSize: \"10px\" } : void 0\r\n              }\r\n            >\r\n              Username\r\n            </span>\r\n            {username.length > 0 && (\r\n              <img src={usernameCheck && usernameCheckDB ? correct : wrong} />\r\n            )}\r\n          </label>\r\n\r\n          <label id={styles.passLabel} className={styles.Label}>\r\n            <input\r\n              onChange={(e) => {\r\n                setPasswordCheck(e.target.value.length > 5);\r\n                setPassword(e.target.value);\r\n              }}\r\n              style={password.length > 0 ? { paddingTop: \"14px\" } : void 0}\r\n              value={password}\r\n              type={show ? \"text\" : \"password\"}\r\n              className={styles.Input}\r\n            />\r\n            <span\r\n              style={\r\n                password.length > 0 ? { top: \"4px\", fontSize: \"10px\" } : void 0\r\n              }\r\n            >\r\n              Password\r\n            </span>\r\n            {password.length > 0 && (\r\n              <img src={passwordCheck ? correct : wrong} />\r\n            )}\r\n            <button\r\n              onClick={() => {\r\n                setShow(!show);\r\n              }}\r\n              style={{\r\n                display: password.length > 0 ? \"inline-block\" : \"none\",\r\n              }}\r\n              className={styles.inputButton}\r\n            >\r\n              {show ? \"Hide\" : \"Show\"}\r\n            </button>\r\n          </label>\r\n\r\n          <button\r\n            type=\"submit\"\r\n            disabled={buttonTrue ? false : true}\r\n            className={styles.login}\r\n            onClick={SignUpFetch}\r\n          >\r\n            Sign up\r\n          </button>\r\n\r\n          {error && (\r\n            <h4 className={styles.error}>Ops! Something went wrong.</h4>\r\n          )}\r\n\r\n          <h4 className={styles.policy}>\r\n            By signing up, you agree to our{\" \"}\r\n            <Link to=\"/hey\">Terms, Data Policy</Link> and{\" \"}\r\n            <Link to=\"/hey\">Cookies Policy.</Link>\r\n          </h4>\r\n        </div>\r\n        <div className={styles.box2}>\r\n          <p>\r\n            Have an account?&nbsp;\r\n            <Link className={styles.signup} to=\"/\">\r\n              Log in\r\n            </Link>\r\n          </p>\r\n        </div>\r\n\r\n        <p className={styles.getApp}>Get the app.</p>\r\n        <div className={styles.box3}>\r\n          <a href=\"https://apps.apple.com/app/instagram/id389801252?vt=lo\">\r\n            <img\r\n              src={appstore}\r\n              className={styles.astore}\r\n              alt=\"App Store\"\r\n              loading=\"lazy\"\r\n            />\r\n          </a>\r\n\r\n          <a href=\"https://play.google.com/store/apps/details?id=com.instagram.android\">\r\n            <img\r\n              src={googleplay}\r\n              className={styles.gplay}\r\n              alt=\"Google Play\"\r\n              loading=\"lazy\"\r\n            />\r\n          </a>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SignUp;\r\n","E:\\instagram\\client\\src\\utils\\helpers.ts",[],"E:\\instagram\\client\\src\\utils\\API.ts",[],"E:\\instagram\\client\\src\\utils\\API_SETTINGS.ts",[],"E:\\instagram\\client\\src\\views\\Home\\index.tsx",["163"],"import React, { useEffect, useRef, useState } from \"react\";\r\nimport Layout from \"../../layout\";\r\nimport styles from \"./Home.module.scss\";\r\n\r\nimport { API_URL } from \"../../utils/API_SETTINGS\";\r\nimport { postData, getData } from \"../../utils/API\";\r\nimport Modal from \"../../components/Modal\";\r\nimport Avatar from \"../../components/Avatar\";\r\nimport Spinner from \"../../components/Spinner\";\r\nimport Post from \"../../components/Post\";\r\nimport AuthMiddleware from \"../../utils/AuthMiddleware\";\r\n\r\nconst Home = () => {\r\n  const [file, setFile] = useState(\"\");\r\n  const [content, setContent] = useState(\"\");\r\n  const [visible, setVisible] = useState(false);\r\n  const [addPostLoading, setAddPostLoading] = useState(false);\r\n  const [loadingPost, setLoadingPost] = useState(true);\r\n  const [loadingUser, setLoadingUser] = useState(true);\r\n  const [user, setUser] = useState<any>();\r\n  const [data, setData] = useState<any>([]);\r\n  const fileInputRef = useRef<any>();\r\n  const contentInputRef = useRef<any>();\r\n\r\n  const handleOnChange = async (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    const reader = new Promise<string>((resolve, reject) => {\r\n      const reader = new FileReader();\r\n      reader.readAsDataURL(e.target.files[0]);\r\n      reader.onload = () => resolve(reader.result.toString());\r\n      reader.onerror = (error) => reject(error);\r\n    });\r\n    setFile(await reader);\r\n  };\r\n\r\n  const getPosts = async () => {\r\n    var promisePosts: any = getData(`${API_URL}/api/posts/getAll`);\r\n    var setPosts = await promisePosts;\r\n    let data = setPosts?.data?.data;\r\n    data?.reverse();\r\n    setData(data);\r\n    setLoadingPost(false);\r\n  };\r\n\r\n  const handleOnSubmit = async (e: React.FormEvent<HTMLFormElement>) => {\r\n    setAddPostLoading(true);\r\n    e.preventDefault();\r\n    const req = postData(`${API_URL}/api/posts/postsCreate`, {\r\n      username: localStorage.getItem(\"username\"),\r\n      img: file,\r\n      description: content,\r\n    });\r\n    const res = await req;\r\n    if (res?.data?.success) {\r\n      fileInputRef.current.value = \"\";\r\n      contentInputRef.current.value = \"\";\r\n      setVisible(false);\r\n      getPosts();\r\n      setAddPostLoading(false);\r\n    } else {\r\n      alert(\"Ops! Something went wrong.\");\r\n      setAddPostLoading(false);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    const getPosts = async () => {\r\n      var promisePosts: any = getData(`${API_URL}/api/posts/getAll`);\r\n      var setPosts = await promisePosts;\r\n      let data = setPosts?.data?.data;\r\n      data?.reverse();\r\n      setData(data);\r\n      setLoadingPost(false);\r\n    };\r\n    const getUser = async () => {\r\n      var promisePosts: any = postData(`${API_URL}/api/auth/getUser`);\r\n      var user = await promisePosts;\r\n      setUser(user?.data?.data);\r\n      setLoadingUser(false);\r\n    };\r\n    getPosts();\r\n    getUser();\r\n  }, []);\r\n\r\n  return (\r\n    <Layout>\r\n      <AuthMiddleware onAuth={false} noAuth=\"/\" />\r\n      <div className={styles.container}>\r\n        <div className={styles.box1}>\r\n          <button className={styles.addPost} onClick={() => setVisible(true)}>\r\n            Add Post\r\n          </button>\r\n          {loadingPost ? (\r\n            <Spinner\r\n              width=\"100%\"\r\n              height=\"100px\"\r\n              spinnerWidth=\"20px\"\r\n              spinnerHeight=\"20px\"\r\n            />\r\n          ) : (\r\n            data?.map((item: any, index: number) => {\r\n              return <Post data={item} index={index} />;\r\n            })\r\n          )}\r\n        </div>\r\n        <div className={styles.sidebar}>\r\n          <div className={styles.sidebarHead}>\r\n            <Avatar width={56} height={56} />\r\n            <div className={styles.shDetail}>\r\n              <p>{user?.username || \"\"}</p>\r\n              <p>{user?.fullname || \"\"}</p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <Modal\r\n        visible={visible}\r\n        onClose={() => setVisible(false)}\r\n        width=\"50%\"\r\n        height=\"200px\"\r\n      >\r\n        <div className={styles.modal}>\r\n          <form\r\n            onSubmit={(e) => {\r\n              handleOnSubmit(e);\r\n            }}\r\n          >\r\n            <label>\r\n              Photo:&nbsp;\r\n              <input\r\n                className={styles.fileInput}\r\n                ref={fileInputRef}\r\n                accept=\".png,.jpg,.jpeg,.webp\"\r\n                type=\"file\"\r\n                onChange={(e) => {\r\n                  handleOnChange(e);\r\n                }}\r\n              />\r\n            </label>\r\n            <label>\r\n              Content:&nbsp;\r\n              <input\r\n                className={styles.textInput}\r\n                ref={contentInputRef}\r\n                type=\"text\"\r\n                onChange={(e) => {\r\n                  setContent(e.target.value);\r\n                }}\r\n              />\r\n            </label>\r\n\r\n            <input\r\n              disabled={addPostLoading ? true : false}\r\n              className={styles.submitInput}\r\n              type=\"submit\"\r\n              value=\"Create Post\"\r\n            />\r\n          </form>\r\n        </div>\r\n      </Modal>\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","E:\\instagram\\client\\src\\layout\\index.tsx",[],"E:\\instagram\\client\\src\\assets\\images\\global\\icons\\Home.tsx",[],"E:\\instagram\\client\\src\\assets\\images\\global\\icons\\Explore.tsx",[],"E:\\instagram\\client\\src\\assets\\images\\global\\icons\\Send.tsx",[],"E:\\instagram\\client\\src\\assets\\images\\global\\icons\\Hearth.tsx",["164","165"],"import * as React from \"react\";\r\nimport { postData } from \"../../../../utils/API\";\r\nimport { API_URL } from \"../../../../utils/API_SETTINGS\";\r\nimport { photoClickTrigger as PCT } from \"../../../../store/atom\";\r\nimport { useRecoilValue } from \"recoil\";\r\n\r\nfunction HearthIcon(props: any) {\r\n  const [like, setLike] = React.useState(\"white\");\r\n  const svgRef = React.useRef<any>(null);\r\n  const photoClickTrigger = useRecoilValue(PCT);\r\n  const toggleLike = async (id: string) => {\r\n    postData(`${API_URL}/api/posts/addLike`, {\r\n      id: id,\r\n      username: localStorage.getItem(\"username\"),\r\n    });\r\n    postData(`${API_URL}/api/auth/toggleLike`, {\r\n      id: id,\r\n      username: localStorage.getItem(\"username\"),\r\n    });\r\n  };\r\n  const checkLike = async (id: string) => {\r\n    const req = postData(`${API_URL}/api/auth/checkLike`, {\r\n      id: id,\r\n      username: localStorage.getItem(\"username\"),\r\n    });\r\n    const res = await req;\r\n    return res?.data?.data ? setLike(\"#ED4956\") : setLike(\"white\");\r\n  };\r\n\r\n  const toggleHearthColor = () => {\r\n    try {\r\n      const svgElement = document.getElementsByClassName(\"hearthSvg\")[\r\n        props.index\r\n      ];\r\n      let element;\r\n      if (!props.postPage && !props.postPageResponsive) {\r\n        element = svgElement.parentElement.parentElement.parentElement\r\n          .childNodes[1].childNodes[0] as HTMLParagraphElement;\r\n      }\r\n\r\n      if (props.postPage) {\r\n        element = svgElement.parentElement.parentElement.parentElement\r\n          .childNodes[1].childNodes[0] as HTMLHeadingElement;\r\n      }\r\n      if (props.postPageResponsive) {\r\n        element = svgElement.parentElement.parentElement.parentElement\r\n          .childNodes[1].childNodes[0] as HTMLHeadingElement;\r\n      }\r\n      let likeCount = element.innerText;\r\n      toggleLike(props.obId);\r\n      if (like === \"white\") {\r\n        element.innerText = String(+likeCount + 1);\r\n        setLike(\"#ED4956\");\r\n      } else {\r\n        element.innerText = String(+likeCount === 0 ? 0 : +likeCount - 1);\r\n        setLike(\"white\");\r\n      }\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  React.useEffect(() => {\r\n    if (svgRef.current) {\r\n      checkLike(props.obId);\r\n    } else {\r\n      svgRef.current = true;\r\n    }\r\n  }, []);\r\n\r\n  React.useEffect(() => {\r\n    if (props.obId && photoClickTrigger === props.obId) {\r\n      toggleHearthColor();\r\n    }\r\n  }, [photoClickTrigger]);\r\n  return (\r\n    <svg\r\n      width={props.width}\r\n      height={props.height}\r\n      viewBox=\"0 0 21 19\"\r\n      fill={props.color || like}\r\n      id=\"hearthSvg\"\r\n      className={props.obId && \"hearthSvg\"}\r\n      ref={svgRef}\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n      {...props}\r\n      onClick={() => {\r\n        if (props.obId) {\r\n          toggleHearthColor();\r\n        }\r\n      }}\r\n    >\r\n      <path\r\n        d=\"M10.305 2.943l.374.425.375-.425.61-.69c1.773-2.009 5.038-2.346 7.273-.726 1.06.768 1.51 1.947 1.559 3.193.048 1.254-.316 2.515-.811 3.339-2.766 4.6-4.898 6.909-9.018 10.304-2.186-1.654-3.77-2.861-5.126-4.215-1.409-1.406-2.58-2.98-3.897-5.388C.162 6.05.279 3.08 2.42 1.527c2.235-1.62 5.5-1.283 7.273.725l.61.691z\"\r\n        fill={props.color || like}\r\n        stroke={\r\n          props.color ? props.color : like === \"white\" ? \"#000\" : \"#ED4956\"\r\n        }\r\n        strokeLinecap=\"round\"\r\n      />\r\n    </svg>\r\n  );\r\n}\r\n\r\nexport default HearthIcon;\r\n","E:\\instagram\\client\\src\\components\\Avatar\\index.tsx",[],"E:\\instagram\\client\\src\\components\\CartHeader\\index.tsx",["166","167"],"import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { postData } from \"../../utils/API\";\r\nimport { API_URL } from \"../../utils/API_SETTINGS\";\r\nimport Avatar from \"../Avatar\";\r\nimport Modal from \"../Modal\";\r\nimport Spinner from \"../Spinner\";\r\nimport styles from \"./CartHeader.module.scss\";\r\n\r\ninterface cartHeader {\r\n  pageName: string;\r\n  height: string;\r\n  width: string;\r\n  username: string;\r\n  obId: string;\r\n  maxWidth?: string;\r\n}\r\n\r\nconst CartHeader = ({\r\n  pageName,\r\n  height,\r\n  width,\r\n  username,\r\n  obId,\r\n  maxWidth,\r\n}: cartHeader) => {\r\n  const [followBool, setFollowBool] = React.useState<boolean>(true);\r\n  const [visibleModal, setVisibleModal] = React.useState<boolean>();\r\n  const [postAdmin, setPostAdmin] = React.useState<boolean>(true);\r\n  const [modalLoading, setModalLoading] = React.useState<boolean>(true);\r\n\r\n  const toggleFollow = async () => {\r\n    const req = postData(`${API_URL}/api/auth/toggleFollow`, {\r\n      usernamePost: username,\r\n    });\r\n    const res = await req;\r\n    return res?.data?.data ? setFollowBool(!followBool) : void 0;\r\n  };\r\n\r\n  const checkFollow = async () => {\r\n    const req = postData(`${API_URL}/api/auth/checkFollow`, {\r\n      usernamePost: username,\r\n    });\r\n    const res = await req;\r\n    return res?.data?.data ? setFollowBool(true) : setFollowBool(false);\r\n  };\r\n\r\n  const checkPostAdmin = async () => {\r\n    const req = postData(`${API_URL}/api/posts/checkPostAdmin`, {\r\n      postID: obId,\r\n    });\r\n    const res = await req;\r\n    const resUnpromise = await res;\r\n    setModalLoading(false);\r\n    return resUnpromise?.data?.success\r\n      ? setPostAdmin(true)\r\n      : setPostAdmin(false);\r\n  };\r\n\r\n  const deletePost = async () => {\r\n    const req = postData(`${API_URL}/api/posts/deletePost`, {\r\n      id: obId,\r\n    });\r\n    const res = await req;\r\n    return res.data.success\r\n      ? (window.location.href = window.location.href)\r\n      : alert(\"Oops. Try again!\");\r\n  };\r\n\r\n  const dotsClick = () => {\r\n    setVisibleModal(true);\r\n    setModalLoading(true);\r\n    checkPostAdmin();\r\n  };\r\n\r\n  React.useEffect(() => {\r\n    checkFollow();\r\n    checkPostAdmin();\r\n  }, []);\r\n  return (\r\n    <div\r\n      style={{ height: height, width: width, maxWidth: maxWidth }}\r\n      className={styles.container}\r\n    >\r\n      <div className={styles.pageName}>\r\n        <Avatar\r\n          width={32}\r\n          height={32}\r\n          border\r\n          borderWidth={46}\r\n          borderHeight={46}\r\n        />\r\n        <Link to={`/profiles/${pageName}`}>{pageName}</Link>\r\n        {!followBool && !postAdmin ? (\r\n          <span>\r\n            &nbsp;&bull;&nbsp;\r\n            <span\r\n              className={styles.followLink}\r\n              onClick={() => {\r\n                toggleFollow();\r\n              }}\r\n            >\r\n              Follow\r\n            </span>\r\n          </span>\r\n        ) : (\r\n          void 0\r\n        )}\r\n      </div>\r\n      <p onClick={dotsClick} className={styles.dots}>\r\n        &bull;&bull;&bull;\r\n      </p>\r\n\r\n      <Modal\r\n        width=\"400px\"\r\n        height=\"auto\"\r\n        visible={visibleModal}\r\n        onClose={() => {\r\n          setVisibleModal(false);\r\n        }}\r\n      >\r\n        {modalLoading ? (\r\n          <Spinner\r\n            width=\"100%\"\r\n            height=\"100%\"\r\n            spinnerWidth=\"25px\"\r\n            spinnerHeight=\"25px\"\r\n          />\r\n        ) : postAdmin ? (\r\n          <ul className={styles.dotsModalContainer}>\r\n            <li className={styles.delete} onClick={deletePost}>\r\n              Delete\r\n            </li>\r\n            <li\r\n              className={styles.close}\r\n              onClick={() => {\r\n                setVisibleModal(false);\r\n              }}\r\n            >\r\n              Close\r\n            </li>\r\n          </ul>\r\n        ) : (\r\n          <ul className={styles.dotsModalContainer}>\r\n            <li\r\n              className={styles.close}\r\n              onClick={() => {\r\n                setVisibleModal(false);\r\n              }}\r\n            >\r\n              Close\r\n            </li>\r\n          </ul>\r\n        )}\r\n      </Modal>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CartHeader;\r\n","E:\\instagram\\client\\src\\assets\\images\\global\\icons\\Comment.tsx",[],"E:\\instagram\\client\\src\\assets\\images\\global\\icons\\Bookmark.tsx",["168"],"import * as React from \"react\";\r\nimport { postData } from \"../../../../utils/API\";\r\nimport { API_URL } from \"../../../../utils/API_SETTINGS\";\r\n\r\nfunction BookmarkIcon(props: any) {\r\n  const [bookmark, setBookmark] = React.useState(\"\");\r\n  const svgRef = React.useRef<any>();\r\n  const toggleBookmark = async (id: string) => {\r\n    postData(`${API_URL}/api/auth/toggleBookmark`, {\r\n      id: id,\r\n      username: localStorage.getItem(\"username\"),\r\n    });\r\n  };\r\n  const checkBookmark = async (id: string) => {\r\n    const deneme = postData(`${API_URL}/api/auth/checkBookmark`, {\r\n      id: id,\r\n      username: localStorage.getItem(\"username\"),\r\n    });\r\n    const res = await deneme;\r\n    return res?.data?.data ? setBookmark(\"#262626\") : setBookmark(\"white\");\r\n  };\r\n\r\n  React.useEffect(() => {\r\n    if (svgRef.current) {\r\n      checkBookmark(props.obId);\r\n    } else {\r\n      svgRef.current = true;\r\n    }\r\n  }, []);\r\n  return (\r\n    <svg\r\n      width={props.width}\r\n      height={props.height}\r\n      viewBox=\"0 0 17 21\"\r\n      fill={bookmark}\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n      {...props}\r\n      ref={svgRef}\r\n      onClick={() => {\r\n        if (props.obId) {\r\n          toggleBookmark(props.obId);\r\n          bookmark === \"white\" ? setBookmark(\"#262626\") : setBookmark(\"white\");\r\n        }\r\n      }}\r\n    >\r\n      <path\r\n        d=\"M8.297 13.624l-7.17 6.274V.5h15v19.398l-7.171-6.274-.33-.288-.329.288z\"\r\n        stroke=\"#262626\"\r\n        fill={bookmark}\r\n      />\r\n    </svg>\r\n  );\r\n}\r\n\r\nexport default BookmarkIcon;\r\n","E:\\instagram\\client\\src\\components\\CartPost\\index.tsx",["169"],"E:\\instagram\\client\\src\\components\\Modal\\index.tsx",["170","171"],"import React, { useEffect, useState } from \"react\";\r\nimport styles from \"./Modal.module.scss\";\r\n\r\ninterface modal {\r\n  width: string;\r\n  height: string;\r\n  visible: boolean;\r\n  children: any;\r\n  onClose: () => void;\r\n}\r\n\r\nconst Modal = ({ width, height, children, visible, onClose }: modal) => {\r\n  return (\r\n    <div\r\n      className={styles.container}\r\n      style={{ display: visible ? \"flex\" : \"none\" }}\r\n    >\r\n      <div\r\n        onClick={() => {\r\n          onClose();\r\n        }}\r\n        className={styles.modalBackground}\r\n      ></div>\r\n      <div className={styles.modal} style={{ width: width, height: height }}>\r\n        <div className={styles.modalHeader}>\r\n          <p\r\n            onClick={() => {\r\n              onClose();\r\n            }}\r\n          >\r\n            X\r\n          </p>\r\n        </div>\r\n        {children}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Modal;\r\n","E:\\instagram\\client\\src\\store\\atom.ts",[],"E:\\instagram\\client\\src\\store\\HearthIcon\\hearthicon.atom.ts",[],"E:\\instagram\\client\\src\\components\\Spinner\\index.tsx",[],"E:\\instagram\\client\\src\\assets\\images\\global\\Spinner.tsx",[],"E:\\instagram\\client\\src\\components\\Post\\index.tsx",["172","173","174","175","176"],"E:\\instagram\\client\\src\\store\\Post\\Post.atom.ts",[],"E:\\instagram\\client\\src\\views\\Profiles\\index.tsx",["177","178"],"import React, { useEffect, useState } from \"react\";\r\nimport { useHistory, useLocation } from \"react-router-dom\";\r\nimport Avatar from \"../../components/Avatar\";\r\nimport Spinner from \"../../components/Spinner\";\r\nimport Layout from \"../../layout\";\r\nimport { postData } from \"../../utils/API\";\r\nimport { API_URL } from \"../../utils/API_SETTINGS\";\r\nimport AuthMiddleware from \"../../utils/AuthMiddleware\";\r\nimport styles from \"./Profiles.module.scss\";\r\nimport postsIcon from \"../../assets/images/global/postsIcon.svg\";\r\nimport HearthIcon from \"../../assets/images/global/icons/Hearth\";\r\nimport CommentIcon from \"../../assets/images/global/icons/Comment\";\r\n\r\nconst Profiles = () => {\r\n  const [loading, setLoading] = useState(true);\r\n  const [userProfile, setUserProfile] = useState<any>();\r\n  const [user, setUser] = useState<any>();\r\n  const [followBool, setFollowBool] = useState(false);\r\n  const [mobile, setMobile] = useState(window.innerWidth < 735 ? true : false);\r\n  const [posts, setPosts] = useState<any>();\r\n  const link = useHistory();\r\n  const profile = useLocation().pathname.split(\"/\")[2];\r\n\r\n  const clickPost = (path: string) => {\r\n    return link.push(`/posts/${path}`);\r\n  };\r\n\r\n  const checkFollow = async () => {\r\n    const req = postData(`${API_URL}/api/auth/checkFollow`, {\r\n      usernamePost: profile,\r\n    });\r\n    const res = await req;\r\n    return res?.data?.data ? setFollowBool(true) : setFollowBool(false);\r\n  };\r\n\r\n  const toggleFollow = async () => {\r\n    const req = postData(`${API_URL}/api/auth/toggleFollow`, {\r\n      usernamePost: profile,\r\n    });\r\n    const res = await req;\r\n    return res?.data?.data ? setFollowBool(!followBool) : void 0;\r\n  };\r\n\r\n  const getUser = async () => {\r\n    var dataPromise = postData(`${API_URL}/api/auth/getUser`);\r\n    var res = await dataPromise;\r\n    if (res?.data?.data) {\r\n      setUser(res?.data?.data);\r\n    } else {\r\n      return link.push(\"/404\");\r\n    }\r\n  };\r\n  const getUserProfile = async () => {\r\n    var dataPromise = postData(`${API_URL}/api/auth/getUserOnUsername`, {\r\n      username: profile,\r\n    });\r\n    var res = await dataPromise;\r\n    if (res?.data?.data) {\r\n      setUserProfile(res?.data?.data);\r\n    } else {\r\n      return link.push(\"/404\");\r\n    }\r\n  };\r\n  const getUserPosts = async () => {\r\n    var dataPromise = postData(`${API_URL}/api/posts/getUserPost`, {\r\n      username: profile,\r\n    });\r\n    var res = await dataPromise;\r\n    var data = res?.data?.data;\r\n    data?.reverse();\r\n    if (data) {\r\n      setPosts(data);\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    getUser();\r\n    getUserProfile();\r\n    getUserPosts();\r\n    checkFollow();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    setLoading(true);\r\n    getUser();\r\n    getUserProfile();\r\n    getUserPosts();\r\n    checkFollow();\r\n  }, [window.location.pathname]);\r\n  window.addEventListener(\"resize\", () => {\r\n    setMobile(window.innerWidth < 735 ? true : false);\r\n  });\r\n  return (\r\n    <div>\r\n      <AuthMiddleware onAuth={false} noAuth=\"/\" />\r\n      {loading ? (\r\n        <Spinner\r\n          width=\"100%\"\r\n          height=\"100vh\"\r\n          spinnerWidth=\"25px\"\r\n          spinnerHeight=\"25px\"\r\n        />\r\n      ) : (\r\n        <Layout>\r\n          <div className={styles.profileHead}>\r\n            <Avatar\r\n              width={mobile ? 77 : 145}\r\n              height={mobile ? 77 : 145}\r\n              border\r\n              borderHeight={mobile ? 107 : 205}\r\n              borderWidth={mobile ? 107 : 205}\r\n              margin=\"0 101px 0 71px\"\r\n            />\r\n            <div className={styles.headContent}>\r\n              <div className={styles.hcBox1}>\r\n                <h1>{profile}</h1>\r\n                <div className={styles.hcBox1BP}>\r\n                  {profile === user?.username ? (\r\n                    <button className={styles.editProfile}>Edit Profile</button>\r\n                  ) : followBool ? (\r\n                    <button onClick={toggleFollow} className={styles.unfollow}>\r\n                      Unfollow\r\n                    </button>\r\n                  ) : (\r\n                    <button onClick={toggleFollow} className={styles.follow}>\r\n                      Follow\r\n                    </button>\r\n                  )}\r\n                </div>\r\n              </div>\r\n              <div className={styles.hcBox2}>\r\n                <h1 className={styles.hc2Content1}>\r\n                  <span>{posts?.length}</span> posts\r\n                </h1>\r\n                <h1 className={styles.hc2Content2}>\r\n                  <span>{userProfile?.follows.length}</span> following\r\n                </h1>\r\n              </div>\r\n              <div className={styles.hcBox3}>\r\n                <h1>{userProfile?.fullname}</h1>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          {/* MOBILE FOLLOW POST BAR BEGIN */}\r\n          <div className={styles.mobileBar}>\r\n            <div className={styles.mbBox1}>\r\n              <p>{posts?.length}</p>\r\n              <p>posts</p>\r\n            </div>\r\n            <div className={styles.mbBox2}>\r\n              <p>{userProfile?.follows.length}</p>\r\n              <p>following</p>\r\n            </div>\r\n          </div>\r\n          {/* MOBILE FOLLOW POST BAR END */}\r\n          <div className={styles.contentNavbar}>\r\n            <button className={styles.cnBox1}>\r\n              <img src={postsIcon} alt=\"Posts Icon\" />\r\n              &nbsp;Posts\r\n            </button>\r\n          </div>\r\n\r\n          {new Array(+(posts?.length % 3) + +(posts?.length / 3).toFixed(0))\r\n            .fill(0)\r\n            .map((_, index) => {\r\n              if (posts) {\r\n                let imgIndex = index * 3;\r\n                return (\r\n                  <div className={styles.postsContainer}>\r\n                    <div className={styles.postsSection}>\r\n                      {posts[imgIndex] !== undefined ? (\r\n                        <div\r\n                          onClick={() => {\r\n                            clickPost(posts[imgIndex]._id);\r\n                          }}\r\n                          className={styles.psContainer}\r\n                        >\r\n                          <img src={posts[imgIndex].img} alt=\"Posts\" />\r\n                          <div className={styles.psHoverBG}></div>\r\n                          <div className={styles.psHover}>\r\n                            <HearthIcon\r\n                              width=\"19px\"\r\n                              height=\"19px\"\r\n                              color=\"white\"\r\n                            />\r\n                            <p>{posts[imgIndex].likes.length}</p>\r\n                            <CommentIcon\r\n                              width=\"19px\"\r\n                              height=\"19px\"\r\n                              color=\"white\"\r\n                              fill=\"white\"\r\n                            />\r\n                            <p>{posts[imgIndex].comments.length}</p>\r\n                          </div>\r\n                        </div>\r\n                      ) : (\r\n                        <div className={styles.psContainerBlank}></div>\r\n                      )}\r\n                      {posts[imgIndex + 1] !== undefined ? (\r\n                        <div\r\n                          onClick={() => {\r\n                            clickPost(posts[imgIndex + 1]._id);\r\n                          }}\r\n                          className={styles.psContainer}\r\n                        >\r\n                          <img src={posts[imgIndex + 1].img} alt=\"Posts\" />\r\n                          <div className={styles.psHoverBG}></div>\r\n                          <div className={styles.psHover}>\r\n                            <HearthIcon\r\n                              width=\"19px\"\r\n                              height=\"19px\"\r\n                              color=\"white\"\r\n                            />\r\n                            <p>{posts[imgIndex + 1].likes.length}</p>\r\n                            <CommentIcon\r\n                              width=\"19px\"\r\n                              height=\"19px\"\r\n                              color=\"white\"\r\n                              fill=\"white\"\r\n                            />\r\n                            <p>{posts[imgIndex + 1].comments.length}</p>\r\n                          </div>\r\n                        </div>\r\n                      ) : (\r\n                        <div className={styles.psContainerBlank}></div>\r\n                      )}\r\n                      {posts[imgIndex + 2] !== undefined ? (\r\n                        <div\r\n                          onClick={() => {\r\n                            clickPost(posts[imgIndex + 2]._id);\r\n                          }}\r\n                          className={styles.psContainer}\r\n                        >\r\n                          <img src={posts[imgIndex + 2].img} alt=\"Posts\" />\r\n                          <div className={styles.psHoverBG}></div>\r\n                          <div className={styles.psHover}>\r\n                            <HearthIcon\r\n                              width=\"19px\"\r\n                              height=\"19px\"\r\n                              color=\"white\"\r\n                            />\r\n                            <p>{posts[imgIndex + 2].likes.length}</p>\r\n                            <CommentIcon\r\n                              width=\"19px\"\r\n                              height=\"19px\"\r\n                              color=\"white\"\r\n                              fill=\"white\"\r\n                            />\r\n                            <p>{posts[imgIndex + 2].comments.length}</p>\r\n                          </div>\r\n                        </div>\r\n                      ) : (\r\n                        <div className={styles.psContainerBlank}></div>\r\n                      )}\r\n                    </div>\r\n                  </div>\r\n                );\r\n              } else {\r\n                return <></>;\r\n              }\r\n            })}\r\n        </Layout>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Profiles;\r\n","E:\\instagram\\client\\src\\components\\AuthRoute\\index.tsx",["179","180"],"import React, { Fragment, useEffect, useState } from \"react\";\r\nimport { Route, useHistory } from \"react-router-dom\";\r\nimport { postData } from \"../../utils/API\";\r\nimport { API_URL } from \"../../utils/API_SETTINGS\";\r\n\r\ninterface authroute {\r\n  children: React.ReactChild;\r\n  to: string;\r\n}\r\n\r\nconst AuthRouteDefault = ({ children, to }: authroute) => {\r\n  const [auth, setAuth] = useState(false);\r\n  const link = useHistory();\r\n\r\n  useEffect(() => {\r\n    const authCheck = async () => {\r\n      var dataPromise = postData(`${API_URL}/api/auth/authCheck`);\r\n      var data = await dataPromise;\r\n      if (data?.data.success) {\r\n        setAuth(true);\r\n      } else {\r\n        link.push(\"/\");\r\n      }\r\n    };\r\n    authCheck();\r\n  }, []);\r\n\r\n  return (\r\n    <Fragment>{auth ? <Route path={to}>{children}</Route> : void 0}</Fragment>\r\n  );\r\n};\r\n\r\nexport default AuthRouteDefault;\r\n",["181","182"],"E:\\instagram\\client\\src\\utils\\AuthMiddleware.tsx",["183"],"import { useEffect } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { postData } from \"./API\";\r\nimport { API_URL } from \"./API_SETTINGS\";\r\n\r\ninterface authmiddleware {\r\n  onAuth: string | boolean;\r\n  noAuth: string | boolean;\r\n}\r\n\r\nconst AuthMiddleware = ({ onAuth, noAuth }: authmiddleware) => {\r\n  const link = useHistory();\r\n\r\n  useEffect(() => {\r\n    return async () => {\r\n      var dataPromise = postData(`${API_URL}/api/auth/authCheck`);\r\n      var data = await dataPromise;\r\n      if (data?.data.success) {\r\n        return onAuth ? link.push(onAuth as string) : true;\r\n      } else {\r\n        return noAuth ? link.push(noAuth as string) : false;\r\n      }\r\n    };\r\n  }, []);\r\n  return <></>;\r\n};\r\n\r\nexport default AuthMiddleware;\r\n","E:\\instagram\\client\\src\\views\\404\\index.tsx",[],"E:\\instagram\\client\\src\\assets\\images\\global\\icons\\CommentPost.tsx",[],"E:\\instagram\\client\\src\\views\\Posts\\index.tsx",["184","185","186"],"import React, { useEffect, useState } from \"react\";\r\nimport { useHistory, useLocation } from \"react-router-dom\";\r\nimport styles from \"./Posts.module.scss\";\r\nimport Spinner from \"../../components/Spinner\";\r\nimport Layout from \"../../layout\";\r\nimport { postData } from \"../../utils/API\";\r\nimport { API_URL } from \"../../utils/API_SETTINGS\";\r\nimport CartHeader from \"../../components/CartHeader\";\r\nimport HearthIcon from \"../../assets/images/global/icons/Hearth\";\r\nimport CommentPostIcon from \"../../assets/images/global/icons/CommentPost\";\r\nimport SendIcon from \"../../assets/images/global/icons/Send\";\r\nimport BookmarkIcon from \"../../assets/images/global/icons/Bookmark\";\r\nimport moment from \"moment\";\r\nimport CartPost from \"../../components/CartPost\";\r\nimport Avatar from \"../../components/Avatar\";\r\nimport CommentRelease from \"../../assets/images/global/icons/CommentRelease.svg\";\r\nimport { postCommentTrigger as PCT } from \"../../store/atom\";\r\nimport { useRecoilValue } from \"recoil\";\r\n\r\nconst Posts = () => {\r\n  const [loading, setLoading] = useState(true);\r\n  const [onAddComment, setOnAddComment] = useState<any>([]);\r\n  const [data, setData] = useState<any>();\r\n  const [profile, setProfile] = useState<any>();\r\n  const onPostComment = useRecoilValue(PCT);\r\n  const location = useLocation();\r\n  const link = useHistory();\r\n  useEffect(() => {\r\n    const getPost = async () => {\r\n      var dataPromise = postData(`${API_URL}/api/posts/getPostOnId`, {\r\n        id: location.pathname.split(\"/\")[2],\r\n      });\r\n      var res = await dataPromise;\r\n      if (res?.data?.data) {\r\n        setData(res?.data?.data);\r\n        setLoading(false);\r\n        console.log(res.data.data);\r\n      } else {\r\n        return link.push(\"/404\");\r\n      }\r\n    };\r\n\r\n    const getUser = async () => {\r\n      var dataPromise = postData(`${API_URL}/api/auth/getUser`);\r\n      var res = await dataPromise;\r\n      if (res?.data?.data) {\r\n        setProfile(res?.data?.data);\r\n      }\r\n    };\r\n    getPost();\r\n    getUser();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (onPostComment.id.length > 0) {\r\n      let newData = [...onAddComment, onPostComment];\r\n      console.log(newData);\r\n      setOnAddComment(newData);\r\n    }\r\n  }, [onPostComment]);\r\n  return (\r\n    <div>\r\n      {loading ? (\r\n        <Spinner\r\n          width=\"100vw\"\r\n          height=\"100vh\"\r\n          spinnerHeight=\"25px\"\r\n          spinnerWidth=\"25px\"\r\n        />\r\n      ) : (\r\n        <Layout>\r\n          <div className={styles.container}>\r\n            <div className={styles.postsContainer}>\r\n              <div className={styles.postsImage}>\r\n                <div className={styles.responsiveHeader}>\r\n                  {/* Responsive mobile */}\r\n                  <CartHeader\r\n                    pageName={data?.username}\r\n                    username={data?.username}\r\n                    obId={data?._id}\r\n                    width=\"100%\"\r\n                    height=\"60px\"\r\n                  />\r\n                </div>\r\n                <img src={data?.img} alt=\"Image\" />\r\n                <div className={styles.responsiveFooter}>\r\n                  <div className={styles.icons}>\r\n                    <div className={styles.iconsBox1}>\r\n                      <HearthIcon\r\n                        obId={data?._id}\r\n                        width={24}\r\n                        height={24}\r\n                        index={0}\r\n                        postPageResponsive={true}\r\n                      />\r\n                      <CommentPostIcon width={24} height={24} />\r\n                      <SendIcon width={24} height={24} />\r\n                    </div>\r\n                    <div className={styles.iconsBox2}>\r\n                      <BookmarkIcon obId={data?._id} width={24} height={24} />\r\n                    </div>\r\n                  </div>\r\n                  <h1 className={styles.likeCount}>\r\n                    <span>{data?.likesNumber}</span> likes\r\n                  </h1>\r\n                  <div className={styles.timeAgo}>\r\n                    {moment(data?.createdAt).fromNow()}\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div className={styles.postsDetails}>\r\n                <CartHeader\r\n                  pageName={data?.username}\r\n                  username={data?.username}\r\n                  obId={data?._id}\r\n                  width=\"100%\"\r\n                  height=\"96px\"\r\n                />\r\n                <div className={styles.pdContent}>\r\n                  <div className={styles.pdcHead}>\r\n                    <Avatar width={32} height={32} />\r\n                    <p>{data?.username}</p>\r\n                    <p>{data?.description}</p>\r\n                  </div>\r\n                  {/* Below code run on add comment */}\r\n                  {onAddComment?.map((item: any) => {\r\n                    return (\r\n                      <div className={styles.pdcComment}>\r\n                        <Avatar width={32} height={32} />\r\n                        <p>\r\n                          <span>{item.username}</span>&nbsp;\r\n                          {item.message}\r\n                        </p>\r\n                      </div>\r\n                    );\r\n                  })}\r\n\r\n                  {/*  DB Comments Map */}\r\n                  {data.comments?.map((item: any) => {\r\n                    return (\r\n                      <div className={styles.pdcComment}>\r\n                        <Avatar width={32} height={32} />\r\n                        <p>\r\n                          <span>{item.username}</span>&nbsp;\r\n                          {item.message}\r\n                        </p>\r\n                      </div>\r\n                    );\r\n                  })}\r\n                </div>\r\n                <div>\r\n                  <div className={styles.icons}>\r\n                    <div className={styles.iconsBox1}>\r\n                      <HearthIcon\r\n                        obId={data?._id}\r\n                        width={24}\r\n                        height={24}\r\n                        index={1}\r\n                        postPage={true}\r\n                      />\r\n                      <img src={CommentRelease} alt=\"Comment\" />\r\n                      <SendIcon width={24} height={24} />\r\n                    </div>\r\n                    <div className={styles.iconsBox2}>\r\n                      <BookmarkIcon obId={data?._id} width={24} height={24} />\r\n                    </div>\r\n                  </div>\r\n                  <h1 className={styles.likeCount}>\r\n                    <span>{data?.likesNumber}</span> likes\r\n                  </h1>\r\n                  <div className={styles.timeAgo}>\r\n                    {moment(data?.createdAt).fromNow()}\r\n                  </div>\r\n                  <CartPost\r\n                    width=\"100%\"\r\n                    height=\"56px\"\r\n                    index={0}\r\n                    postInfo={{ name: profile?.username, obId: data?._id }}\r\n                  />\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </Layout>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Posts;\r\n",{"ruleId":"187","replacedBy":"188"},{"ruleId":"189","replacedBy":"190"},{"ruleId":"191","severity":1,"message":"192","line":1,"column":17,"nodeType":"193","messageId":"194","endLine":1,"endColumn":26},{"ruleId":"195","severity":1,"message":"196","line":5,"column":11,"nodeType":"193","messageId":"197","endLine":5,"endColumn":15},{"ruleId":"198","severity":1,"message":"199","line":12,"column":5,"nodeType":"200","endLine":21,"endColumn":7},{"ruleId":"191","severity":1,"message":"201","line":3,"column":8,"nodeType":"193","messageId":"194","endLine":3,"endColumn":24},{"ruleId":"198","severity":1,"message":"199","line":110,"column":15,"nodeType":"200","endLine":110,"endColumn":75},{"ruleId":"198","severity":1,"message":"199","line":132,"column":33,"nodeType":"200","endLine":132,"endColumn":78},{"ruleId":"198","severity":1,"message":"199","line":155,"column":15,"nodeType":"200","endLine":155,"endColumn":79},{"ruleId":"198","severity":1,"message":"199","line":178,"column":15,"nodeType":"200","endLine":178,"endColumn":60},{"ruleId":"191","severity":1,"message":"202","line":19,"column":10,"nodeType":"193","messageId":"194","endLine":19,"endColumn":21},{"ruleId":"203","severity":1,"message":"204","line":69,"column":6,"nodeType":"205","endLine":69,"endColumn":8,"suggestions":"206"},{"ruleId":"203","severity":1,"message":"207","line":75,"column":6,"nodeType":"205","endLine":75,"endColumn":25,"suggestions":"208"},{"ruleId":"209","severity":1,"message":"210","line":66,"column":33,"nodeType":"211","messageId":"212","endLine":66,"endColumn":53},{"ruleId":"203","severity":1,"message":"213","line":79,"column":6,"nodeType":"205","endLine":79,"endColumn":8,"suggestions":"214"},{"ruleId":"203","severity":1,"message":"204","line":29,"column":6,"nodeType":"205","endLine":29,"endColumn":8,"suggestions":"215"},{"ruleId":"191","severity":1,"message":"216","line":18,"column":10,"nodeType":"193","messageId":"194","endLine":18,"endColumn":28},{"ruleId":"191","severity":1,"message":"192","line":1,"column":17,"nodeType":"193","messageId":"194","endLine":1,"endColumn":26},{"ruleId":"191","severity":1,"message":"217","line":1,"column":28,"nodeType":"193","messageId":"194","endLine":1,"endColumn":36},{"ruleId":"191","severity":1,"message":"218","line":26,"column":30,"nodeType":"193","messageId":"194","endLine":26,"endColumn":51},{"ruleId":"191","severity":1,"message":"219","line":27,"column":10,"nodeType":"193","messageId":"194","endLine":27,"endColumn":13},{"ruleId":"203","severity":1,"message":"220","line":52,"column":6,"nodeType":"205","endLine":52,"endColumn":26,"suggestions":"221"},{"ruleId":"222","severity":1,"message":"223","line":82,"column":9,"nodeType":"200","endLine":88,"endColumn":11},{"ruleId":"224","severity":1,"message":"225","line":130,"column":53,"nodeType":"226","messageId":"227","endLine":130,"endColumn":55},{"ruleId":"203","severity":1,"message":"228","line":82,"column":6,"nodeType":"205","endLine":82,"endColumn":8,"suggestions":"229"},{"ruleId":"203","severity":1,"message":"230","line":90,"column":6,"nodeType":"205","endLine":90,"endColumn":32,"suggestions":"231"},{"ruleId":"191","severity":1,"message":"232","line":2,"column":29,"nodeType":"193","messageId":"194","endLine":2,"endColumn":40},{"ruleId":"203","severity":1,"message":"233","line":28,"column":6,"nodeType":"205","endLine":28,"endColumn":8,"suggestions":"234"},{"ruleId":"187","replacedBy":"235"},{"ruleId":"189","replacedBy":"236"},{"ruleId":"203","severity":1,"message":"237","line":24,"column":6,"nodeType":"205","endLine":24,"endColumn":8,"suggestions":"238"},{"ruleId":"203","severity":1,"message":"239","line":52,"column":6,"nodeType":"205","endLine":52,"endColumn":8,"suggestions":"240"},{"ruleId":"203","severity":1,"message":"241","line":60,"column":6,"nodeType":"205","endLine":60,"endColumn":21,"suggestions":"242"},{"ruleId":"222","severity":1,"message":"223","line":85,"column":17,"nodeType":"200","endLine":85,"endColumn":52},"no-native-reassign",["243"],"no-negated-in-lhs",["244"],"@typescript-eslint/no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","@typescript-eslint/no-redeclare","'logo' is already defined.","redeclared","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'AuthRouteDefault' is defined but never used.","'loadingUser' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook React.useEffect has a missing dependency: 'props.obId'. Either include it or remove the dependency array.","ArrayExpression",["245"],"React Hook React.useEffect has missing dependencies: 'props.obId' and 'toggleHearthColor'. Either include them or remove the dependency array.",["246"],"no-self-assign","'window.location.href' is assigned to itself.","MemberExpression","selfAssignment","React Hook React.useEffect has missing dependencies: 'checkFollow' and 'checkPostAdmin'. Either include them or remove the dependency array.",["247"],["248"],"'postCommentTrigger' is assigned a value but never used.","'useState' is defined but never used.","'setPostCommentTrigger' is assigned a value but never used.","'pct' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'comments', 'commentsNumberPlus', and 'data._id'. Either include them or remove the dependency array. You can also do a functional update 'setCommentsNumberPlus(c => ...)' if you only need 'commentsNumberPlus' in the 'setCommentsNumberPlus' call.",["249"],"jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","React Hook useEffect has missing dependencies: 'checkFollow', 'getUser', 'getUserPosts', and 'getUserProfile'. Either include them or remove the dependency array.",["250"],"React Hook useEffect has missing dependencies: 'checkFollow', 'getUser', 'getUserPosts', and 'getUserProfile'. Either include them or remove the dependency array. Outer scope values like 'window.location.pathname' aren't valid dependencies because mutating them doesn't re-render the component.",["251"],"'useLocation' is defined but never used.","React Hook useEffect has missing dependencies: 'link' and 'onAuth'. Either include them or remove the dependency array.",["252"],["243"],["244"],"React Hook useEffect has missing dependencies: 'link', 'noAuth', and 'onAuth'. Either include them or remove the dependency array.",["253"],"React Hook useEffect has missing dependencies: 'link' and 'location.pathname'. Either include them or remove the dependency array.",["254"],"React Hook useEffect has a missing dependency: 'onAddComment'. Either include it or remove the dependency array.",["255"],"no-global-assign","no-unsafe-negation",{"desc":"256","fix":"257"},{"desc":"258","fix":"259"},{"desc":"260","fix":"261"},{"desc":"256","fix":"262"},{"desc":"263","fix":"264"},{"desc":"265","fix":"266"},{"desc":"265","fix":"267"},{"desc":"268","fix":"269"},{"desc":"270","fix":"271"},{"desc":"272","fix":"273"},{"desc":"274","fix":"275"},"Update the dependencies array to be: [props.obId]",{"range":"276","text":"277"},"Update the dependencies array to be: [photoClickTrigger, props.obId, toggleHearthColor]",{"range":"278","text":"279"},"Update the dependencies array to be: [checkFollow, checkPostAdmin]",{"range":"280","text":"281"},{"range":"282","text":"277"},"Update the dependencies array to be: [comments, commentsNumberPlus, data._id, postCommentTrigger]",{"range":"283","text":"284"},"Update the dependencies array to be: [checkFollow, getUser, getUserPosts, getUserProfile]",{"range":"285","text":"286"},{"range":"287","text":"286"},"Update the dependencies array to be: [link, onAuth]",{"range":"288","text":"289"},"Update the dependencies array to be: [link, noAuth, onAuth]",{"range":"290","text":"291"},"Update the dependencies array to be: [link, location.pathname]",{"range":"292","text":"293"},"Update the dependencies array to be: [onAddComment, onPostComment]",{"range":"294","text":"295"},[2274,2276],"[props.obId]",[2408,2427],"[photoClickTrigger, props.obId, toggleHearthColor]",[2165,2167],"[checkFollow, checkPostAdmin]",[913,915],[1899,1919],"[comments, commentsNumberPlus, data._id, postCommentTrigger]",[2668,2670],"[checkFollow, getUser, getUserPosts, getUserProfile]",[2805,2831],[817,819],"[link, onAuth]",[699,701],"[link, noAuth, onAuth]",[2010,2012],"[link, location.pathname]",[2208,2223],"[onAddComment, onPostComment]"]